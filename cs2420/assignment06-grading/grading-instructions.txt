ANALYSIS DOC (30 pts)
------------------------------------
1.  [ 15 pt ]  In general, look for well-labeled plots that respond to each the three comparisons.  Also, look for the students to have commented on the plots and explained any unexpected behavior.

  ** addFirst(item) of MyLinkedList vs. add(0, item) of ArrayList, expect O(1) vs. O(N) 

  ** get(i) of MyLinkedList vs. get(i) of ArrayList, expect O(N) vs. O(1)

  ** remove(i) of MyLinkedList vs. remove(i) of ArrayList, expect O(N) for both

2.  [ 5 pt ] MyLinkedList vs. ArrayList.  Functionality should be similar (with major differences being the absence of addFirst, etc. in ArrayList).  Performance varies from method to method.  Some methods, like addFirst, are constant for MyLinkedList and linear for ArrayList.  Others, like get(i), are linear MyLinkedList and constant for ArrayList.  Look for substance in the student's answer and references to the plots in #3.

3.  [ 4 pt ]  MyLinkedList vs. Java's LinkedList should be the same in functionality and performance (since both are doubly-linked lists).  A good answer would be supported by at least one experiment comparing the running times of a method common to each class. A plot is not necessary if they have a good test answer. A simple "they should be about the same" is insufficient. Why should they be about the same?

4. [5 pt] They should note that binarySearch for LinkedList's is O(n), but add and remove stay the same.

5.  [ 1 pt ]  If anyone spent > 10 hours, that's a red flag.  We should investigate why they struggled so much.


PROGRAM (70 pts)
------------------------------------
See the grading program. You will have to weight the score up to 70 points.
