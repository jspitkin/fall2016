ANALYSIS DOC (30 pts)
------------------------------------
1.  [ 1 pt ]  (FYI)

2.  [ 2 pt ]  Accept anything reasonable.  (The question makes them reflect on the process and somewhat checks that they at least know what pair programming is.)

3.  [ 1 pt ]  Accept anything reasonable.  If you think anyone had a serious problem that needs to be addressed, let me know.

4.  [ 5 pt ]  It would have been a lot easier to implement a set because a Java List is already a Collection and has many of the same methods students had to implement.  Also, there would not have been casting from Object to E (which can be type unsafe).  Thus, programmer efficiency would be much better with List.

We could not call the add() method from List directly, since it does not insert in sorted order.

A downside of using a Java List is that the programmer has little or no control over how the List is implemented (such as when to resize).  Further, calling List.isEmpty() inside of MySortedSet.isEmpty() will cost extra.  Assuming that an ArrayList is used, the big-oh behavior should be the same.  If a LinkedList is used, the big-oh will differ (particularly for contains()) . . . but we have yet to cover linked lists in class.

5.  [ 3 pt ] The method is O(log N) because of the repeated halving of the array in a binary search. 

6.  [ 4 pt ]  The trend of the plot should be logarithmic.  Smaller problem sizes than suggested is fine.  

[ 3 pt ]  The plot should have good labels and a title.  

[ 2 pt ]  Students should know contains() is O(logN) due to the binary search, whether or not their plot shows it.

[ 3 pt ]  It is not acceptable to just provide a plot for this question, it must be explained/interpreted WRT to expected runtime.

(This is STILL practice for timing and plotting, give at least 5 pt for trying.)

7.  [ 3 pt ]  The add method should be O(n) in worst case.

[ 2 pt ]  The plot should have good labels and a title.
                  
8.  [ 1 pt ]  If anyone spent > 15 hours, that's a red flag.  We should investigate why they struggled so much.


PROGRAM (70 pts)
-----------------------------
See SortedSetGrader.java.