ANALYSIS DOC (10 pts)
------------------------------------
1.  [ 1 pt ]  (FYI)

2.  [ 1 pt ]  Accept anything reasonable.  If you think anyone had a serious problem that needs to be addressed, let me know.

3.  [ 9 pt ]  Look for a good effort and well-labeled plots that the students attempt to explain.  In general, the better performance when insertions are in random order should be obvious.  We are comparing usually log behavior (random order insertions) and linear behavior (sorted order insertions). They can perform any experiment that shows the quality of a random (log N) vs. worst case (N) tree. If they are following the suggested experiment of timing N operations, plots should be N log N for random order and N^2 for sorted order.

4.  [ 9 pt ]  Look for a good effort and well-labeled plots that the students attempt to explain.  Java's TreeSet is a balanced BST, so the logarithmic behavior is guaranteed (unlike our BST).  The better performance of TreeSet is expected, but may not be very obvious.  We are comparing usually log behavior (student BST) to always log behavior (Java's balanced BST). Student's BST may be faster with insertion since it does not have to rebalance, but Big-O should be the same. 

5.  [ 4 pt ]  Alphabetical order will result in a right-heavy BST and linear performance.  To avoid, add dictionary words in a permuted order, or use a self-balancing BST.

6.  [ 1 pt ]  If anyone spent > 10 hours, that's a red flag.  We should investigate why they struggled so much.


PROGRAM (90 pts)
-----------------------------
See autograder